---
import { getCollection } from "astro:content";
import Layout from "../layouts/Layout.astro";

import dayjs from "dayjs";
import utc from "dayjs/plugin/utc";

dayjs.extend(utc);

export async function getStaticPaths() {
  const blogEntries = await getCollection("blogs");
  return blogEntries.map((entry) => ({
    params: {
      blog: entry.slug,
    },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content, remarkPluginFrontmatter } = await entry.render();
---

<Layout
  title={entry.data.title}
  slug={entry.slug}
  image={{
    src: entry.data.cover,
    alt: entry.data.coverAlt,
    link: entry.data.coverLink,
  }}
  bodyClass={entry.data.class}
>
  <div
    class="flex gap-1 text-xs -mt-3 flex-wrap"
    transition:name={`tags-${entry.slug}`}
  >
    {
      entry.data.tags.map((tag) => (
        <span class="bg-stone-800 text-white rounded-md px-2 py-1">{tag}</span>
      ))
    }
  </div>
  <div class="flex justify-between items-center flex-wrap gap-x-2">
    <p class="text-sm opacity-60 mb-0">
      Blog post published on <b transition:name={`date-${entry.slug}`}
        >{dayjs.utc(entry.data.date).format("MMMM D, YYYY")}</b
      >
    </p>
    <p transition:name={`time-to-read-${entry.slug}`} class="text-sm font-bold mb-0">
      {remarkPluginFrontmatter.minutesRead}
    </p>
  </div>
  <p class="text-sm" transition:name={`description-${entry.slug}`}>
    {entry.data.description}
  </p>
  {remarkPluginFrontmatter.toc}
  <Content />
</Layout>
